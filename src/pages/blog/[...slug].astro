---
import { getCollection } from 'astro:content';
import Layout from "../../layouts/Layout.astro";
import Socials from "../../components/Socials.astro";
import Breadcrumbs from "../../components/ui/Breadcrumbs.astro";

export async function getStaticPaths() {
    const blogEntries = await getCollection('blog');
    return blogEntries.map(entry => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const formattedDate = entry.data.publishDate.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
});
---

<Layout title={entry.data.title}>
    <article class="max-w-4xl mx-auto px-6 lg:px-12">
        <div class="space-y-8 py-12">
            <Breadcrumbs 
                items={[
                    { label: "Blog", href: "/blog" },
                    { label: entry.data.title }
                ]}
            />
            <!-- Article Header -->
            <header class="space-y-6">
                <h1 class="text-4xl md:text-5xl font-bold text-zircon-100">
                    {entry.data.title}
                </h1>
                <div class="flex items-center space-x-4 text-zircon-400">
                    {entry.data.author && (
                        <span>{entry.data.author}</span>
                    )}
                    <time datetime={entry.data.publishDate.toISOString()}>
                        {formattedDate}
                    </time>
                </div>
            </header>

            <!-- Featured Image -->
            {entry.data.image && (
                <img
                    src={entry.data.image}
                    alt={entry.data.title}
                    class="w-full h-[400px] object-cover rounded-lg"
                />
            )}

            <!-- Article Content -->
            <div class="prose prose-invert prose-lg max-w-none">
                <Content />
            </div>

            <!-- Tags -->
            {entry.data.tags && entry.data.tags.length > 0 && (
                <div class="flex flex-wrap gap-2 pt-8">
                    {entry.data.tags.map((tag: string) => (
                        <a
                            href={`/blog/tag/${tag}`}
                            class="px-3 py-1 bg-zircon-600/10 hover:bg-zircon-600/20 text-zircon-200 rounded-full text-sm transition-colors duration-200"
                        >
                            {tag}
                        </a>
                    ))}
                </div>
            )}
        </div>
        <Socials />
    </article>
</Layout>
