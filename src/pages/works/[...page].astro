---
// src/pages/works/[...page].astro
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import type { GetStaticPaths, Page } from "astro";
import type { CollectionEntry } from "astro:content";
import Banner from "../../components/ui/Banner.astro";
import Button from "../../components/ui/Button.astro";
import SectionTitle from "../../components/ui/SectionTitle.astro";

interface Props {
    page: Page<CollectionEntry<"works">>;
    allCategories: string[];
}

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
    const allWorks = await getCollection("works");
    const allCategories = [
        ...new Set(allWorks.flatMap((work) => work.data.category)),
    ];

    return paginate(allWorks, {
        pageSize: 4,
        props: { allCategories },
    });
};

const { page, allCategories } = Astro.props as Props;
---

<BaseLayout title="Works">
    <main class="container mx-auto px-4 py-16">
        <!-- Categories Filter -->
        <div class="flex gap-4 mb-8 flex-wrap justify-center">
            <a
                href="/works"
                class="px-4 py-2 rounded-full bg-golden text-black transition-all hover:opacity-80"
            >
                All
            </a>
            {
                allCategories?.map((cat) => (
                    <a
                        href={`/works?category=${cat}`}
                        class="px-4 py-2 rounded-full bg-dark/60 backdrop-blur-xs transition-all hover:bg-golden hover:text-black"
                    >
                        {cat}
                    </a>
                ))
            }
        </div>

        <!-- Works Stack -->
        <div class="space-y-6">
            {
                page.data?.map((work) => (
                    <Banner
                        bgImg={work.data.coverImage}
                        className="banner min-h-[400px] lg:min-h-0 flex lg:block flex-col justify-end"
                        bgPos="right"
                    >
                        <div class="flex flex-col w-full lg:w-1/2 lg:mr-auto p-4 lg:p-24 md:p-6 bg-dark/40 backdrop-blur-lg banner-title mt-auto lg:mt-0">
                            <h2 class="text-xl lg:text-4xl font-bold golden-text">
                                {work.data.title}
                            </h2>
                            <p class="text-sm lg:text-xl py-4 lg:py-6 tracking-widest">
                                {work.data.description}
                            </p>
                            <Button
                                className="w-fit"
                                url={`/works/${work.slug}`}
                            >
                                <span class="text-sm lg:text-xl">Project</span>
                                <svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    class="h-6 w-6"
                                    fill="none"
                                    viewBox="0 0 24 24"
                                    stroke="currentColor"
                                    stroke-width="2"
                                >
                                    <path
                                        stroke-linecap="round"
                                        stroke-linejoin="round"
                                        d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"
                                    />
                                </svg>
                            </Button>
                        </div>
                    </Banner>
                ))
            }
        </div>

        <!-- Pagination -->
        {
            page.lastPage > 1 && (
                <div class="flex justify-center gap-4 mt-16">
                    {page.url.prev && (
                        <Button url={page.url.prev} className="w-fit">
                            Previous
                        </Button>
                    )}
                    <span class="px-4 py-2 bg-dark/60 backdrop-blur-xs rounded-md">
                        Page {page.currentPage} of {page.lastPage}
                    </span>
                    {page.url.next && (
                        <Button url={page.url.next} className="w-fit">
                            Next
                        </Button>
                    )}
                </div>
            )
        }
    </main>
</BaseLayout>
